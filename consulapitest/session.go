// Code autogenerated by mockery v2.0.0
//
// Do not manually edit the content of this file.

// Package consulapitest contains autogenerated mocks.
package consulapitest

import "github.com/shoenig/consulapi"
import "github.com/stretchr/testify/mock"
import "time"

// Session is an autogenerated mock type for the Session type
type Session struct {
	mock.Mock
}

// CreateSession provides a mock function with given fields: dc, config
func (mockerySelf *Session) CreateSession(dc string, config consulapi.SessionConfig) (consulapi.SessionID, error) {
	ret := mockerySelf.Called(dc, config)

	var r0 consulapi.SessionID
	if rf, ok := ret.Get(0).(func(string, consulapi.SessionConfig) consulapi.SessionID); ok {
		r0 = rf(dc, config)
	} else {
		r0 = ret.Get(0).(consulapi.SessionID)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, consulapi.SessionConfig) error); ok {
		r1 = rf(dc, config)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteSession provides a mock function with given fields: dc, id
func (mockerySelf *Session) DeleteSession(dc string, id consulapi.SessionID) error {
	ret := mockerySelf.Called(dc, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, consulapi.SessionID) error); ok {
		r0 = rf(dc, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListSessions provides a mock function with given fields: dc, node
func (mockerySelf *Session) ListSessions(dc string, node string) (map[consulapi.SessionID]consulapi.SessionConfig, error) {
	ret := mockerySelf.Called(dc, node)

	var r0 map[consulapi.SessionID]consulapi.SessionConfig
	if rf, ok := ret.Get(0).(func(string, string) map[consulapi.SessionID]consulapi.SessionConfig); ok {
		r0 = rf(dc, node)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[consulapi.SessionID]consulapi.SessionConfig)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(dc, node)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ReadSession provides a mock function with given fields: dc, id
func (mockerySelf *Session) ReadSession(dc string, id consulapi.SessionID) (consulapi.SessionConfig, error) {
	ret := mockerySelf.Called(dc, id)

	var r0 consulapi.SessionConfig
	if rf, ok := ret.Get(0).(func(string, consulapi.SessionID) consulapi.SessionConfig); ok {
		r0 = rf(dc, id)
	} else {
		r0 = ret.Get(0).(consulapi.SessionConfig)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, consulapi.SessionID) error); ok {
		r1 = rf(dc, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RenewSession provides a mock function with given fields: dc, id
func (mockerySelf *Session) RenewSession(dc string, id consulapi.SessionID) (time.Duration, error) {
	ret := mockerySelf.Called(dc, id)

	var r0 time.Duration
	if rf, ok := ret.Get(0).(func(string, consulapi.SessionID) time.Duration); ok {
		r0 = rf(dc, id)
	} else {
		r0 = ret.Get(0).(time.Duration)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, consulapi.SessionID) error); ok {
		r1 = rf(dc, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
